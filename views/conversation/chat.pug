extends layout
block content

    //-Sideber
    include sideber.pug


    //- Chat content
    div.flex-1.flex.flex-col.bg-white.overflow-hidden
        //- Top bar
        div.border-b.flex.px-6.py-2.items-center.flex-none
            div.flex.flex-col
                h3.text-grey-darkest.mb-1.font-extrabold.conversation-with
                div.text-grey-dark.text-sm.truncate.conversation-user-status
            div.ml-auto.hidden(class='md:block')
                div.relative
                    input.appearance-none.border.border-grey.rounded-lg.pl-8.pr-4.py-2(type='search' placeholder='Search')
                    div.absolute.pin-y.pin-l.pl-3.flex.items-center.justify-center
                        svg.fill-current.text-grey.h-4.w-4(xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20')
                            path(d='M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z')
        //- Chat messages
        div.px-6.py-4.flex-1.overflow-y-scroll.chat-messages
            //- A message
            div.message
            
        
        
        div.pb-6.px-4.flex-none
            p.play-typing(style="padding: 10px 2px;") &nbsp;
            div.flex.rounded-lg.border-2.border-grey.overflow-hidden
                span.text-3xl.text-grey.border-r-2.border-grey.p-2
                    svg.fill-current.h-6.w-6.block(xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20')
                        path(d='M16 10c0 .553-.048 1-.601 1H11v4.399c0 .552-.447.601-1 .601-.553 0-1-.049-1-.601V11H4.601C4.049 11 4 10.553 4 10c0-.553.049-1 .601-1H9V4.601C9 4.048 9.447 4 10 4c.553 0 1 .048 1 .601V9h4.399c.553 0 .601.447.601 1z')
                input#message.w-full.px-4(type='text' placeholder='Message here..')




    .script 
        script(src="/socket.io/socket.io.js")
        //- script(src="js/main.js")
    
    script.

        socket = io ( { query: { userId: "#{userId}" } });
        const chatMessages = document.querySelector('.chat-messages');
        socket.on('broadcast',(data) =>{
            let content = '';
            for(item of data.onlineUserList){
                if(item.user.id != "#{userId}" ){
                    if(item.isOnline == true){
                        content +=  '<div class="flex items-center py-1 px-4"><span class="bg-green rounded-full block w-2 h-2 mr-2"></span><span data-fullname="'+item.user.fullname+'" data-id="'+item.user.id+'" class="direct-message text-white opacity-75 cursor-pointer">'+item.user.fullname+'</span></div>';
                    }else{
                        content +=  '<div class="flex items-center py-1 px-4 opacity-50"><span class="border border-white rounded-full w-2 h-2 mr-2"></span><span data-fullname="'+item.user.fullname+'" data-id="'+item.user.id+'" class="direct-message text-white cursor-pointer">'+item.user.fullname+'</span></div>';
                    }
                }
            }
            if(content){
                $("div.user-list").html(content);
            }else{
                $("div.user-list").html('All users is offline');
            } 
        });





        //-----------------------Start Conversation------------------------
        let = toUserId = '';
        let = fullname = '';
        $(document).on("click","span.direct-message",function() {
            toUserId = $(this).data("id");
            fullname = $(this).data("fullname");
            $('h3.conversation-with').text(fullname);
            $('div.conversation-user-status').text('@work');
            $('div.bg-teal-dark').removeClass('bg-teal-dark');
            $(this).closest('div').addClass('bg-teal-dark');
            const data = { user: "#{userId}", from: toUserId };
            socket.emit('loadPrivateChatHistory', data); 
        });
        //-------------------------///-------------------------------------



        //-----------------------Load Privious Conversation------------------------
        socket.on('privateChatHistory',(data) =>{
            $('.chat-messages').html('');
            var conversation = '';
            for(item of data.chatHistory){

                    var messageDiv = '<div class="flex items-start mb-4 text-sm">';
                        messageDiv += '<img src="https://www.w3schools.com/howto/img_avatar2.png" class="w-10 h-10 rounded mr-3">';
                        messageDiv += '<div class="flex-1 overflow-hidden">';
                        messageDiv += '<div>';
                        messageDiv += '<span class="font-bold">'+item.from.fullname+' '+'</span>';
                        messageDiv += '<span class="text-grey text-xs">'+item.date+'</span>';
                        messageDiv += '</div>';
                        messageDiv += '<p class="text-black leading-normal">'+item.message+'</p>';
                        messageDiv += '</div>';
                        messageDiv += '</div>';
                
                conversation += messageDiv;
            }
             $(chatMessages).html(conversation);
            chatMessages.scrollTop=chatMessages.scrollHeight;
        });
        //------------------------------------------------------------------------




        socket.on('instantMessage',(data) =>{
            if(data.messageObject.from.id == toUserId){
                var messageDiv = '<div class="flex items-start mb-4 text-sm">';
                    messageDiv += '<img src="https://www.w3schools.com/howto/img_avatar2.png" class="w-10 h-10 rounded mr-3">';
                    messageDiv += '<div class="flex-1 overflow-hidden">';
                    messageDiv += '<div>';
                    messageDiv += '<span class="font-bold">'+data.messageObject.from.fullname+' '+'</span>';
                    messageDiv += '<span class="text-grey text-xs">'+data.messageObject.date+'</span>';
                    messageDiv += '</div>';
                    messageDiv += '<p class="text-black leading-normal">'+data.messageObject.message+'</p>';
                    messageDiv += '</div>';
                    messageDiv += '</div>';
                $('div.chat-messages').append(messageDiv);
            }else{

                notifyMe(data.messageObject.from.fullname,data.messageObject.message );
            }
            chatMessages.scrollTop=chatMessages.scrollHeight;
        });





        socket.on('displaySentMessage',(data) =>{
            if(data.messageObject.to.id == toUserId){
                var messageDiv = '<div class="flex items-start mb-4 text-sm">';
                    messageDiv += '<img src="https://www.w3schools.com/howto/img_avatar2.png" class="w-10 h-10 rounded mr-3">';
                    messageDiv += '<div class="flex-1 overflow-hidden">';
                    messageDiv += '<div>';
                    messageDiv += '<span class="font-bold">'+data.messageObject.from.fullname+' '+'</span>';
                    messageDiv += '<span class="text-grey text-xs">'+data.messageObject.date+'</span>';
                    messageDiv += '</div>';
                    messageDiv += '<p class="text-black leading-normal">'+data.messageObject.message+'</p>';
                    messageDiv += '</div>';
                    messageDiv += '</div>';
                $('div.chat-messages').append(messageDiv);
            }
            chatMessages.scrollTop=chatMessages.scrollHeight;
        });





        socket.on('PlayMessageTypeing',(data) =>{
            if(data.data.from.id == toUserId){
                $('p.play-typing').text(data.data.message);

                setTimeout(function() {
                    $('p.play-typing').html('&nbsp;');
                }, 2000);
            }
        });





        function sendMessage(){
            var mgs = $("input#message").val();
            if(toUserId && mgs ){
                const messageObject = {
                    from: {id: "#{userId}", fullname: "#{fullname}" },
                    to:   {id: toUserId, fullname: fullname },
                    message: mgs
                }
                 $("input#message").val('');
                socket.emit('sendMessage', messageObject);
            }
        }

       

        $('input#message').keyup(function(e){
            if(e.keyCode == 13){
                sendMessage();
            }else{
                const data = {
                    from: {id: "#{userId}", fullname: "#{fullname}" },
                    to:   {id: toUserId, fullname: fullname },
                    message: "#{fullname}"+' is typing....'
                }
                socket.emit('messageTypeing', data);
            }
        });




        // Push Notification-----------------------------------------------------------
        document.addEventListener('DOMContentLoaded', function() {
            if (!Notification) {
            alert('Desktop notifications not available in your browser. Try Chromium.');
            return;
        }
        if (Notification.permission !== 'granted')
            Notification.requestPermission();
        });


        function notifyMe(name, message) {
            if (Notification.permission !== 'granted')
                Notification.requestPermission();
            else {
                var notification = new Notification('New Message Received From '+name, {
                    icon: 'https://www.btracsolutions.com/assets/ico/faveicon2.png',
                    body: 'Message: '+message,
                });
                notification.onclick = function() {
                    window.open('http://localhost:3000/conversation');
                };
            }
        }
